

Approch for Making it work with Bare Minimum Functionality

When user types or hover the word



Step 1. -> Get the postion{lineNumber, columnNumber} of the first character of the word when user hovers or types
Setp 2. -> Use that postion to find the Syntax Type by traversing syntax json



Case When User Hovers

1.Variable Expression:
    -Show: variable declaration
    e.g 
    for Primitives
    var x: int 
    for Object and Array
    var x:T | const x:T[2]
2. TypeExpression
    - In case of primitive show the type documentation
    - In case of custom or object show it like 
    e.g 
      In case of Object: type T or whole object type T = { } (If possible)
      In case of Array: T[2]
3. Function Definition or Function Call or Function Delaration
    - Show Function declaration
    e.g 
    fun main(x:int) -> nthg 
4. Class Name
    - Show Class Declaration (No Members or function ) ![For now]
    e.g 
    class ClassName

When User start typing

- Provide Intelisence (filtered)
    - All the Keyword (Predefined)
    - All the Functions (BuiltIn and User Defined)
        - Approch -> when ever user creates the function store that in 
                    the collections (As Function and also append the bracket opening and closing)
                    and then show the function delcration when user is typing parameters
    - All the variable 
        - Approch -> when user declares the variable store the variable 
                     along with its type in the collection 
    - Types (Both Primitives and Non Primitives)
        - Approch -> for NonPrimitive types store them when user declares them (e.g type T  = {})
    - All class names 
        - Approch -> store the class name in the collection when class is declarated and defined
    - When User hits the dot after variable name
        - provide Intelisence for all the properites of that object or class
        -  if it is nested then get the type of that perticular property form the object and provide its Intelisence
