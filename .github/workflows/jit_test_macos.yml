name: macOS Native Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-on-macos:
    # Use the latest native macOS runner provided by GitHub
    runs-on: macos-latest

    steps:
      # 1. Check out your repository code
      # This is the equivalent of the `COPY` commands in your Dockerfile
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Install all required dependencies using Homebrew
      # This step replaces your `apt-get install` commands.
      # Note: Xcode Command Line Tools (Clang, g++, build-essential) are pre-installed.
      - name: Install Dependencies via Homebrew
        run: |
          # Update Homebrew and install all necessary packages
          brew update
          brew install llvm@17 googletest gdb wget ninja zstd openssl@3 ccache automake autoconf libtool cmake

      # 3. Set up environment variables for the Clang compiler
      # This replaces the `ENV` commands and points to the Homebrew-installed Clang
      - name: Set Compiler Environment
        run: |
          echo "CC=$(brew --prefix llvm@17)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@17)/bin/clang++" >> $GITHUB_ENV
          echo "LDFLAGS=-L$(brew --prefix llvm@17)/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix llvm@17)/include" >> $GITHUB_ENV

      # 4. Run your build command
      # This is the final `RUN` command from your Dockerfile
      - name: Build Dependencies
        run: make test-jit
