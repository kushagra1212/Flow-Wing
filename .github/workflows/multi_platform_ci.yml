name: Build and Test on All Platforms

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ## ------------------ macOS Jobs ------------------ ##

  test_macos_arm64:
    name: Test on macOS (Apple Silicon)
    runs-on: macos-14 # ARM64 runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_15.4.app/Contents/Developer

      - name: Install Tools
        run: brew install ninja ccache automake autoconf libtool llvm@17

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            cmake/install
            .fw_dependencies
          key: ${{ runner.os }}-${{ runner.arch }}-deps-${{ hashFiles('cmake/deps_builder/CMakeLists.txt') }}

      - name: Set Compiler Environment
        run: |
          echo "CC=$(brew --prefix llvm@17)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@17)/bin/clang++" >> $GITHUB_ENV
          echo "LDFLAGS=-L$(brew --prefix llvm@17)/lib -fuse-ld=lld" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix llvm@17)/include" >> $GITHUB_ENV

      - name: Build and Test
        run: make test-jit

  test_macos_x86_64:
    name: Test on macOS (Intel)
    runs-on: macos-12 # x86_64 runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_14.2.app/Contents/Developer

      - name: Install Tools
        run: brew install ninja ccache automake autoconf libtool llvm@17

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            cmake/install
            .fw_dependencies
          key: ${{ runner.os }}-${{ runner.arch }}-deps-${{ hashFiles('cmake/deps_builder/CMakeLists.txt') }}

      - name: Set Compiler Environment
        run: |
          echo "CC=$(brew --prefix llvm@17)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@17)/bin/clang++" >> $GITHUB_ENV
          echo "LDFLAGS=-L$(brew --prefix llvm@17)/lib -fuse-ld=lld" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix llvm@17)/include" >> $GITHUB_ENV

      - name: Build and Test
        run: make test-jit

  ## ------------------ Windows Job ------------------ ##

  test_windows_x86_64:
    name: Test on Windows (x86_64)
    runs-on: windows-latest

    # Use the MSYS2 shell for all run steps in this job
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # MSYS2 needs to update its package database first
      - name: Update MSYS2
        run: pacman -Syu --noconfirm

      - name: Install Build Tools with Pacman
        run: |
          pacman -S --noconfirm --needed \
            make \
            automake \
            autoconf \
            libtool \
            cmake \
            ninja \
            ccache \
            wget \
            mingw-w64-x86_64-toolchain

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            cmake/install
            .fw_dependencies
          key: ${{ runner.os }}-${{ runner.arch }}-deps-${{ hashFiles('cmake/deps_builder/CMakeLists.txt') }}

      - name: Build and Test
        # This will now run inside the MSYS2 shell and can execute .sh scripts
        run: make test-jit

  ## ------------------ Linux Job ------------------ ##

  test_linux_x86_64:
    name: Test on Linux (x86_64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-17 ninja-build ccache automake autoconf libtool wget

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            cmake/install
            .fw_dependencies
          key: ${{ runner.os }}-${{ runner.arch }}-deps-${{ hashFiles('cmake/deps_builder/CMakeLists.txt') }}

      - name: Build and Test
        env:
          CC: clang-17
          CXX: clang++-17
        run: make test-jit
