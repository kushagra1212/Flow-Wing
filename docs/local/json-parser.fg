bring Str
bring Map

fun parseJson(inout json_str: str) -> Map::String {
  var i = 0
  if (json_str[i] == '{') {
    i = i + 1 
  }
  var mp: Map::String = new Map::String()
  while (json_str[i] != '\\0') {
    while (json_str[i] == ' ' || json_str[i] == '\\t' || json_str[i] == '\\n' || json_str[i] == '\\r') {
      i = i + 1 
    }
    if (json_str[i] == '"') {
      i = i + 1 
      var key = ""
      while (json_str[i] != '"') {
        key = key + Str::int8ToString(json_str[i]) 
        i = i + 1 
      }
      i = i + 1 
      while json_str[i] == ' ' || json_str[i] == '\\t' || json_str[i] == '\\n' || json_str[i] == '\\r' {
        i = i + 1 
      }
      var value = ""
      if (json_str[i] == ':') {
        i = i + 1 
        while json_str[i] == ' ' || json_str[i] == '\\t' || json_str[i] == '\\n' || json_str[i] == '\\r' {
          i = i + 1 
        }
        if (json_str[i] == '"') {
          i = i + 1 
          while (json_str[i] != '"') {
            value = value + Str::int8ToString(json_str[i]) 
            i = i + 1 
          }
          i = i + 1 
        } or if (json_str[i] == '{') {
          var obj_str = "{"
          var brace_count = 1
          i = i + 1 
          while (brace_count > 0) {
            if json_str[i] == '{' {
              brace_count = brace_count + 1 
            } or if json_str[i] == '}' {
              brace_count = brace_count - 1 
            }
            obj_str = obj_str + Str::int8ToString(json_str[i]) 
            i = i + 1 
          }
          value = obj_str 
        } or if (json_str[i] == '[') {
          var arr_str = "["
          var bracket_count = 1
          i = i + 1 
          while (bracket_count > 0) {
            if json_str[i] == '[' {
              bracket_count = bracket_count + 1 
            } or if json_str[i] == ']' {
              bracket_count = bracket_count - 1 
            }
            arr_str = arr_str + Str::int8ToString(json_str[i]) 
            i = i + 1 
          }
          value = arr_str 
        } or if (json_str[i] >= '0' && json_str[i] <= '9' || json_str[i] == '-' || json_str[i] == '.') {
          while (json_str[i] >= '0' && json_str[i] <= '9' || json_str[i] == '.' || json_str[i] == '-') {
            value = value + Str::int8ToString(json_str[i]) 
            i = i + 1 
          }
        } else {
          break
        }
      }
      mp.insert(key, value)
    }
    if (json_str[i] == ',') {
      i = i + 1 
    }
  }
  return mp
}

