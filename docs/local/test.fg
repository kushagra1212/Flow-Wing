
fun get() -> int,str {
  return 2,"H"
}


var x:int,y:str = get()


/#

var x:int, y:str = 2,"hello"

print(x,y)

y,x = "Hi",5

print(x,y)


type J ={
  a:str 
}

type T = {

  a:int,
  b:deci,
  c:J
}

class A {
  var x:int 
  init(x:int) -> nthg {
      self.x = x
  }

  printX() -> nthg {
    print(x)
  }
}

var a:int,b:str,c:deci,e:bool,g:T,f:T[10]  = 2,"e"

var l:int,aa:A = 45,new A(22)

c,g = 2.3,{b:3.3}

e,f  =true,[{a:10}]

print(e,f)
print(aa.x)
aa.printX()

l,aa = 12,new A(32)
print(l)
print(aa.x)
aa.printX()

/#fun get() -> str,int {
  return "",2
}

var x:str = err ? get()



/#


fun fopen(fileName: as str, mode: as str) -> as str decl 
fun fread(buffer:int[5000] ,size: as int, count: as int, file: as str) -> as int decl


const fileName:str = "2temp3.txt"
var file:str = fopen(fileName, "r")
if(file == Nir) {
    print("NULL")
  }

/#
print(file)
var buffer:int[5]
print(file)

var res: int = fread(buffer,4,10,file)

print(res)

print(String(buffer))



