
fun socket(domain: as int, soketType: as int, protocol: as int) -> as int decl


fun htons(hostshort: as int) -> as int decl


fun htonl(hostlong: as int) -> as int decl


fun perror(s: as str) -> nthg decl

type in_addr = {
  s_addr: int
}
type sockaddr_in = {
  sin_family: int,
  sin_port: int,
  sin_addr: in_addr
}
type sockaddr = {
  sa_len: int,
  sa_family: str,
  sa_data: str[14]
}

fun bind(sockfd: as int, inout addr: as sockaddr, addrlen: as int) -> as int decl


fun inet_pton(af: as int, src: as str, inout dst: as str) -> as int decl


fun inet_addr(c: as str) -> as int decl


fun main(argc: as int, argv: str[10]) -> as int {
  const AF_INET: int = 2
  const SOCK_STREAM: int = 1
  const sockfd: int = socket(AF_INET, SOCK_STREAM, 0)
  if (sockfd == -1) {
    perror("webserver (socket)")
    return 1
  }
  print("socket created: sockfd = " + sockfd)
  var host_addr: sockaddr
  const host_addrlen: int = 4
  host_addr.sa_len = 12 
  host_addr.sa_family = "4" 
  host_addr.sa_data[0] = "127.0.0.1" 
  host_addr.sa_data[2] = "0.0.0.0" 
  if (bind(sockfd, (host_addr), host_addrlen) != 0) {
    perror("webserver (bind)")
    return 1
  }
  return 0
}

